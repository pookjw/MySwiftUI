// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.2 effective-5.10 (swiftlang-6.2.0.16.14 clang-1700.3.16.4)
// swift-module-flags: -target arm64-apple-xros26.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -library-level api -enable-experimental-feature Macros -enable-experimental-feature ExtensionMacros -enable-experimental-feature IsolatedAny2 -enable-upcoming-feature InferSendableFromCaptures -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -user-module-version 7.0.83.1.501 -module-name _SwiftUIPrivate -package-name _SwiftUIPrivate
// swift-module-flags-ignorable:  -formal-cxx-interoperability-mode=off -interface-compiler-version 6.2
@_exported import Swift
@_exported import SwiftUI
@_exported import os.log
@_exported import os
@_exported import OSLog

@available(visionOS 26.0, *)
@_originallyDefinedIn(module: "SwiftUI", visionOS 26.0)
public struct HostingViewTransparentBackgroundReason: Swift.OptionSet, Swift.CustomStringConvertible {
  public typealias RawValue = Swift.UInt32
  public var description: Swift.String {
    get
  }
}

@available(visionOS 26.0, *)
@_originallyDefinedIn(module: "SwiftUI", visionOS 26.0)
public class PlatformColorDefinition {
  public class func resolvedHDRColor(_: Swift.AnyObject, environment: SwiftUI.EnvironmentValues) -> SwiftUI.Color.ResolvedHDR?
}

@available(visionOS 26.0, *)
@_originallyDefinedIn(module: "SwiftUI", visionOS 26.0)
public class GraphHost {
}

@available(visionOS 26.0, *)
@_originallyDefinedIn(module: "SwiftUI", visionOS 26.0)
extension _SwiftUIPrivate.GraphHost {
  public struct Data {
    public init()
  }
}

@available(visionOS 26.0, *)
@_originallyDefinedIn(module: "SwiftUI", visionOS 26.0)
public class ViewGraph: _SwiftUIPrivate.GraphHost {
  public init<T: SwiftUI.View>(rootViewType: T.Type, requestedOutputs: _SwiftUIPrivate.ViewGraph.Outputs)
}

@available(visionOS 26.0, *)
@_originallyDefinedIn(module: "SwiftUI", visionOS 26.0)
extension _SwiftUIPrivate.ViewGraph {
  public struct Outputs: Swift.OptionSet {
    public var rawValue: Swift.UInt8 {
      get
      set
    }

    public init(rawValue: Swift.UInt8)
  }
}

@available(visionOS 26.0, *)
@_originallyDefinedIn(module: "SwiftUI", visionOS 26.0)
public enum CustomEventCategory: Swift.Int8 {
    public static func setEnabledCategory(_ category: _SwiftUIPrivate.CustomEventCategory, enabled: Swift.Bool)
    
    public var rawValue: Swift.Int8 {
      get
    }

    case unknown
    case observable
    case transaction
    case action
    case graph
    case animation
    case instantiation
    case dynamicProperties
}

@available(visionOS 26.0, *)
@_originallyDefinedIn(module: "SwiftUI", visionOS 26.0)
public struct CustomEventTrace {
}

@available(visionOS 26.0, *)
@_originallyDefinedIn(module: "SwiftUI", visionOS 26.0)
extension _SwiftUIPrivate.CustomEventTrace {
  public class Recorder {
    
  }
}

@available(visionOS 26.0, *)
@_originallyDefinedIn(module: "SwiftUI", visionOS 26.0)
public struct ViewGraphGeometryObservers<T: _SwiftUIPrivate.ViewGraphGeometryMeasurer> {

}

@available(visionOS 26.0, *)
@_originallyDefinedIn(module: "SwiftUI", visionOS 26.0)
public protocol ViewGraphGeometryMeasurer {
  associatedtype Proposal
  associatedtype Size
}

@available(visionOS 26.0, *)
@_originallyDefinedIn(module: "SwiftUI", visionOS 26.0)
public struct CachedEnvironment {

}

@available(visionOS 26.0, *)
@_originallyDefinedIn(module: "SwiftUI", visionOS 26.0)
public struct RootGeometry {

}

@available(visionOS 26.0, *)
@_originallyDefinedIn(module: "SwiftUI", visionOS 26.0)
public class ViewGraphHost {}

//@available(visionOS 26.0, *)
//@_originallyDefinedIn(module: "SwiftUI", visionOS 26.0)
//public struct BloomFilter: Swift.Equatable {
//  public init()
//  public init(value: Swift.UInt)
//  public init(hashValue: Swift.Int)
//  public init<T: Swift.Hashable>(value: T)
//  public init(type: Any.Type)
//  public func mayContain(_ other: _SwiftUIPrivate.BloomFilter) -> Swift.Bool
//  public mutating func formUnion(_ other: _SwiftUIPrivate.BloomFilter)
//  public func union(_ other: _SwiftUIPrivate.BloomFilter) -> _SwiftUIPrivate.BloomFilter
//}

@available(visionOS 26.0, *)
@_originallyDefinedIn(module: "SwiftUI", visionOS 26.0)
public struct DisplayList {
}

@available(visionOS 26.0, *)
@_originallyDefinedIn(module: "SwiftUI", visionOS 26.0)
public struct UnsafeHeterogeneousBuffer {
  public struct Index {}
  public init()
  @discardableResult public func append<T>(_ value: T, vtable: _SwiftUIPrivate._UnsafeHeterogeneousBuffer_VTable.Type) -> _SwiftUIPrivate.UnsafeHeterogeneousBuffer.Index
}

@available(visionOS 26.0, *)
@_originallyDefinedIn(module: "SwiftUI", visionOS 26.0)
open class _UnsafeHeterogeneousBuffer_VTable {
}

@available(visionOS 26.0, *)
@_originallyDefinedIn(module: "SwiftUI", visionOS 26.0)
public struct GestureContainerFeature {
  public static var isEnabled: Swift.Bool { get }
  public static var isEnabledOverride: Swift.Bool? { get set }
}

@available(visionOS 26.0, *)
@_originallyDefinedIn(module: "SwiftUI", visionOS 26.0)
public struct RepresentableContextValues {}

@available(visionOS 26.0, *)
@_originallyDefinedIn(module: "SwiftUI", visionOS 26.0)
public protocol PreferenceKey {
  associatedtype Value
    
  static var defaultValue: Value {
      get
  }
}

@available(visionOS 26.0, *)
@_originallyDefinedIn(module: "SwiftUI", visionOS 26.0)
public protocol HostPreferenceKey: _SwiftUIPrivate.PreferenceKey {
}

@available(visionOS 26.0, *)
@_originallyDefinedIn(module: "SwiftUI", visionOS 26.0)
public struct PreferenceKeys: Swift.Equatable, Swift.RandomAccessCollection {
  public init()
  public mutating func remove(_ key: any (_SwiftUIPrivate.PreferenceKey).Type)
  public func contains(_ key: any (_SwiftUIPrivate.PreferenceKey).Type) -> Swift.Bool
  public mutating func add(_ key: any (_SwiftUIPrivate.PreferenceKey.Type))
  public subscript(_ index: Swift.Int) -> any (_SwiftUIPrivate.PreferenceKey).Type { get }
  public var isEmpty: Swift.Bool { get }
  public var startIndex: Swift.Int { get }
  public var endIndex: Swift.Int { get }
  public func union(_ keys: _SwiftUIPrivate.PreferenceKeys) -> _SwiftUIPrivate.PreferenceKeys
}

@available(visionOS 26.0, *)
@_originallyDefinedIn(module: "SwiftUI", visionOS 26.0)
public enum Log {
  public static func internalWarning(_ message: @autoclosure () -> Swift.String)
  public static func internalError(_ message: @autoclosure () -> Swift.String)
  public static var runtimeIssuesLog: os.OSLog { get }
  public static var eventDebuggingLog: os.OSLog { get }
  public static var archiving: os.Logger { get }
}

@available(visionOS 26.0, *)
@_originallyDefinedIn(module: "SwiftUI", visionOS 26.0)
extension os.OSLog {
  public static var runtimeIssuesLog: os.OSLog { get }
}
